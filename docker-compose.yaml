services:
  db:
    container_name: postgresdb_container
    image: postgres:14.17
    platform: linux/arm64
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/airflow-init.sql:/docker-entrypoint-initdb.d/airflow-init.sql
    networks:
      - my-network

  airflow:
    container_name: airflow_container
    build:
      context: .
      dockerfile: infrastructure/docker/airflow/Dockerfile
    platform: linux/arm64
    depends_on:
      - db
    ports:
      - "8080:8080"
    environment:
      # Airflow database connection - must match .env values
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@db:5432/airflow
      AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 8080
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: false
      
      # Database credentials for data pipeline
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_HOST: db
      POSTGRES_DB: db
      POSTGRES_PORT: 5432
    volumes:
      - ./infrastructure/airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./config:/opt/airflow/config
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket
    command: >
      bash -c "
        airflow db migrate && airflow standalone
      "
    networks:
      - my-network
    
  dbt:
    container_name: dbt_container
    build:
      context: .
      dockerfile: infrastructure/docker/dbt/Dockerfile
      platforms:
        - linux/arm64
    depends_on:
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: db
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      DBT_PROFILES_DIR: /usr/app/dbt
    volumes:
      - ./infrastructure/dbt/data_forge:/usr/app/dbt
      - ./src:/usr/app/src
      - ./config:/usr/app/config
    working_dir: /usr/app/dbt
    command: tail -f /dev/null
    networks:
      - my-network

networks:
  my-network:
    driver: bridge